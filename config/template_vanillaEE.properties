#
# Demo: mEDEA
# title: basic demo of mEDEA with small robots, based on (cf. Bredeche, Montanier. PPSN 2010)
# date: 2009-03-31 => 2014-11-06
#

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# IMPLEMENTATION NOTE
# This implementation of mEDEA is vanilla flavoured.
# If energy is required, a robot dies if it has no new genomes, or no more energy. 
# the initial energy amount is (straightforwardly) refilled, but genome list remains empty.
# => use gEnergyLevel to activate/deactivate use of energy.
# => use gEnergyRefill to activate/deactivate robot energy refill when energy is 0.

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

#
# Main simulation parameters
#

# 200,150,Perceptron
# 50,150,Perceptron
# 50,150,elman - fail
# 80,150,elman

# example use of import:
#   import(config/tmp1.properties)
#   import(config/tmp2.properties)

gInitialNumberOfRobots = 200 #200

gNbOfPhysicalObjects = 300
gLocationFinderExitOnFail = false

gNbOfLandmarks = 0   # check SandboxEEWorldObserver::updateEnvironment() to remove moving landmarks

gSensoryInputs_distanceToContact = true
gSensoryInputs_physicalObjectType = true
gSensoryInputs_isOtherAgent = true
gSensoryInputs_otherAgentGroup = true
gSensoryInputs_otherAgentOrientation = true
gSensoryInputs_isWall = true
gSensoryInputs_groundSensors = true
gSensoryInputs_nbLandmarks = 1              # if =0, {distance|orientation}ToLandmark are ignored
gSensoryInputs_distanceToLandmark = true
gSensoryInputs_orientationToLandmark = true
gSensoryInputs_energyLevel = true

gEnergyRequestOutput = false
gReentrantMapping_motorOutputs = false
gReentrantMapping_virtualOutputs = false
gVirtualOutputs = 0

gControllerType = 0 # MLP=0, Perceptron=1, Elman=2, ESN=3 (may be extremely slow w.r.t on your computer and ESN parameters!)
gNbHiddenLayers = 1
gNbNeuronsPerHiddenLayer = 5
gNeuronWeightRange = 800.0  # [-400,+400]

# ESN -- can be very slow (w.r.t. parameters and computer used)
gESNStepsBySimulationStep = 2 #10
gESNReservoirSize = 50 #100
gESNDensityOfConnections = 0.20 #0.10
gESNAlpha = 0.88
gESNAllowInputToOutputDirectConnections = false
gESNAllowOutputSelfRecurrentConnections = false #true
gESNAllowInputToReservoirConnections = true
gESNFixedInputToReservoirConnections = false
gESNAllowOutputToReservoirConnections = true
gESNAddConstantInputBias = true
gESNAddSinInputBias = false
gESNSinBiasPeriod = 0.01
gESNUseSparseComputation = false

gSensorRange = 32

gDisplayMode = 1
gBatchMode = false

gRandomSeed = -1

gVerbose = true

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

gMaxIt = -1 # 80400 #80400=200gen #-1=infinite

gEvaluationTime =   400

gNotListeningStateDelay = 400			# -1: infinite  ; 0: no delay (default) ; >0: delay
gListeningStateDelay = -1					# -1: infinite (default) ; 0: no delay (inactive) ; >0: delay  
						# remark 1: ignored if gNotListeningStateDelay=-1
						# remark 2: setting gNotListeningStateDelay>0 and gListeningStateDelay=0 is possible, but useless

gLimitGenomeTransmission = false		# optional: default is false
gMaxNbGenomeTransmission = 2    		# optional: (ignored if gLimitGenomeTransmission is false)
gSelectionMethod = 3							# optional: (default is 0) ; 0: random ; 1: first; 2: best; 3: fitprop

gLogGenome = false
gLogGenomeSnapshot = true # only if it%gEvaluationTime*gSnapshotsFrequency=0

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

#
# general file information
#

ConfigurationLoaderObjectName = TemplateVanillaEEConfigurationLoader

gRobotMaskImageFilename = data/minirobot-mask.bmp
gRobotSpecsImageFilename = data/minirobot-specs-12sensors.bmp

#gForegroundImageFilename = data/maze_foreground.bmp
#gEnvironmentImageFilename = data/maze_environment.bmp
#gBackgroundImageFilename = data/maze_background.bmp
#gFootprintImageFilename = data/maze_footprints.bmp
#gArenaWidth = 1240
#gArenaHeight = 1220
#gDisplayScreenWidth = 620 # optional
#gDisplayScreenHeight = 610 # optional
# gPhysicalObjectsInitArea* constrains localization to the designated area.
# If not present, whole arena's area is considered (with a 10-pixel border)
# Ignored if object localization is explicit
#gPhysicalObjectsInitAreaX = 10
#PhysicalObjectsInitAreaY = 10
#PhysicalObjectsInitAreaWidth = 490
#PhysicalObjectsInitAreaHeight = 980
# gAgentsInitArea* constrains localization to the designated area.
# If not present, whole arena's area is considered
# Ignored if agent localization is explicit
#gAgentsInitAreaX = 500
#gAgentsInitAreaY = 0
#gAgentsInitAreaWidth = 500
#gAgentsInitAreaHeight = 1000


gForegroundImageFilename = data/env_1400_foreground.bmp
gEnvironmentImageFilename = data/env_1400_environment.bmp
gBackgroundImageFilename = data/env_1400_background.bmp
gFootprintImageFilename = data/env_1400_footprints.bmp
gArenaWidth = 1400
gArenaHeight = 800
##gDisplayScreenWidth = 500 # optional
##gDisplayScreenHeight = 500 # optional
# gPhysicalObjectsInitArea* constrains localization to the designated area.
# If not present, whole arena's area is considered (with a 10-pixel border)
# Ignored if object localization is explicit
gPhysicalObjectsInitAreaX = 20
gPhysicalObjectsInitAreaY = 20
gPhysicalObjectsInitAreaWidth = 700
gPhysicalObjectsInitAreaHeight = 780
# gAgentsInitArea* constrains localization to the designated area.
# If not present, whole arena's area is considered
# Ignored if agent localization is explicit
gAgentsInitAreaX = 20
gAgentsInitAreaY = 20
gAgentsInitAreaWidth = 1380
gAgentsInitAreaHeight = 780

#gLogFilename = logs/log.txt # if commented, create a time-stamped file.
gLogCommentText = (under-development)

gSnapshots = true # take snapshots
gSnapshotsFrequency = 10 # every N generations


# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# 
# Other parameters
#

# general purpose

gPauseMode = false
gDisplaySensors = 2   # 0: no, 1: only-contact, 2: all + contacts are red, 3: all (same color)
gDisplayTail = false
gRobotDisplayFocus = false
gDisplayGroundCaption = false
gNiceRendering = true
SlowMotionMode = false
gUserCommandMode = false
gRobotLEDdisplay = true

gFastDisplayModeSpeed = 60
gFramesPerSecond = 60

gRobotIndexFocus = 0

gNumberOfRobotGroups = 1 # unused

gPhysicalObjectIndexStartOffset = 1
gRobotIndexStartOffset = 1048576  # 0x100000

gFootprintImage_restoreOriginal = true

# Monitoring

gVideoRecording = false # significantly slow down simulation
gTrajectoryMonitor = false  # significantly slow down simulation

gInspectorMode = false
gInspectorAgent = false
gMonitorRobot = false

# Inspector cursor (''god mode'')

gInspectorCursorHorizontalSpeed = 1
gInspectorCursorVerticalSpeed = 1
gInspectorAgentXStart = 1
gInspectorAgentYStart = 1

# robot dynamics and structure

gMaxTranslationalSpeed = 2  # value btw 0+ and robot width in pixels
gMaxTranslationalDeltaValue = 2 	# value btw 0+ and gMaxTranslationalSpeed
gMaxRotationalSpeed = 30

gInspectorCursorMaxSpeedOnXaxis = 5
gInspectorCursorMaxSpeedOnYaxis = 10

gLocomotionMode = 0

# =-=-=-=-=-=

# simulation parameters

gMonitorPositions = false # slow down if true.

# Max nb of trials for picking a random location for an object OR robot
# note: it may not be possible (or difficult) to pick a location.
#       this variable is to avoid infinite loop.
gLocationFinderMaxNbOfTrials = 1000 # 100?

# =-=-=-=-=-=

# parameters wrt. mEDEA

gIndividualMutationRate = 1.0 # apply (whatever) mutation operator? 1.0=always_mutate
gMutationOperator = 1 # 0: uniform, 1: gaussian with evolved sigma, 2: gaussian with fixed sigma
gSigmaMin = 0.001 
gProbaMutation = 0.0
gUpdateSigmaStep = 0.35
gSigmaRef = 0.1
gSigmaMax = 0.5
gSigma=0.01 # only if mutation operator is set to 2

# =-=-=-=-=-=

# Robot energy

gEnergyLevel = false # false: energy is not used
gEnergyInit = 400
gEnergyMax = 400
gEnergyRefill = true # robot energy refill

# Landmarks

VisibleLandmarks = true
gLandmarkRadius = 10.0

# Physical objects

gPhysicalObjectsVisible = true
gPhysicalObjectsRedraw = false

#physicalObject[0].type=gPhysicalObjectDefaultType # energy item
##physicalObject[0].x = 100 # if commented, choose random location
##physicalObject[0].y = 100
#physicalObject[0].radius=8
#physicalObject[0].footprintRadius=14
#physicalObject[0].displayColorRed=255
#physicalObject[0].displayColorGreen=255
#physicalObject[0].displayColorBlue=0
#physicalObject[0].visible=true
#physicalObject[0].relocate=true
#physicalObject[0].overwrite=false
#physicalObject[0].regrowTimeMax=0
#physicalObject[0].energy=1000
#physicalObject[0].energyMode=2

gPhysicalObjectDefaultType = 1
gPhysicalObjectDefaultRelocate = false #true
gPhysicalObjectDefaultOverwrite = false
gPhysicalObjectDefaultRadius = 8
gPhysicalObjectDefaultFootprintRadius = 14
gPhysicalObjectDefaultDisplayColorRed = 0
gPhysicalObjectDefaultDisplayColorGreen = 255
gPhysicalObjectDefaultDisplayColorBlue = 0
gPhysicalObjectDefaultSolid_w = 16
gPhysicalObjectDefaultSolid_h = 16
gPhysicalObjectDefaultSoft_w = 22
gPhysicalObjectDefaultSoft_h = 22

gPhysicalObjectDefaultRegrowTimeMax = 0

gEnergyItemDefaultMode = 3 # energyMode
gEnergyItemDefaultInit = 1000 # energy


# =-=-=-=-=-=

# landmarks. Check gNbOfLandmarks for max value.
landmark[0].x = 300
landmark[0].y = 300
landmark[1].x = 700
landmark[1].y = 700

# Robots. Check gInitialNumberOfRobots for max value.
#robot[0].x = 100
#robot[0].y = 100
#robot[0].orientation = 90			# 0...359, clockwise -- default is 0.
#robot[0].groupId=0						# default is 0 anyway

#robot[256].x = 50
#robot[256].y = 50
#robot[256].orientation = 90			# 0...359, clockwise -- default is 0.
#robot[256].groupId=0						# default is 0 anyway

# Physical objects. Check gNbOfPhysicalObjects for max value.
# 0: default object ; 1: energy item ; 2: gate object ; 3: switch object

#physicalObject[0].type=gPhysicalObjectDefaultType # energy item
##physicalObject[0].x = 100 # if commented, choose random location
##physicalObject[0].y = 100
#physicalObject[0].radius=8
#physicalObject[0].footprintRadius=14
#physicalObject[0].displayColorRed=255
#physicalObject[0].displayColorGreen=255
#physicalObject[0].displayColorBlue=0
#physicalObject[0].visible=true
#physicalObject[0].relocate=true
#physicalObject[0].overwrite=false
#physicalObject[0].regrowTimeMax=0
#physicalObject[0].energy=1000
#physicalObject[0].energyMode=2

#physicalObject[1].type=2 # gate
#physicalObject[1].x = 795
#physicalObject[1].y = 703
#physicalObject[1].solid_w=9
#physicalObject[1].solid_h=118
#physicalObject[1].soft_w=0
#physicalObject[1].soft_h=0
#physicalObject[1].displayColorRed=128
#physicalObject[1].displayColorGreen=128
#physicalObject[1].displayColorBlue=255
#physicalObject[1].visible=true
#physicalObject[1].relocate=false
#physicalObject[1].overwrite=false
#physicalObject[1].regrowTimeMax=800 		# respawn after N iterations

#physicalObject[2].type=3 # switch
#physicalObject[2].x = 878
#physicalObject[2].y = 92
#physicalObject[2].radius=8
#physicalObject[2].footprintRadius=14
#physicalObject[2].displayColorRed=0
#physicalObject[2].displayColorGreen=0
#physicalObject[2].displayColorBlue=255
#physicalObject[2].visible=true
#physicalObject[2].regrowTimeMax=850			# respawn after N iterations
#physicalObject[2].relocate=false
#physicalObject[2].overwrite=false
#physicalObject[2].sendMessageTo=1 			# send message to object #1 (ie. open gate)


